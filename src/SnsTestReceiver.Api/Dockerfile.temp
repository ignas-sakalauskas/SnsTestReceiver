FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# build config args
ARG BUILDCONFIG=RELEASE
ARG VERSION=2.0.0

# copy csproj and restore as distinct layers
COPY ./src/SnsTestReceiver.Api/*.csproj ./src/SnsTestReceiver.Api/
RUN dotnet restore ./src/SnsTestReceiver.Api/SnsTestReceiver.Api.csproj

# copy everything
COPY ./src/ ./src/
WORKDIR ./src/SnsTestReceiver.Api/

# build and publish the app
FROM build AS publish

# map Docker arch into dotnet runtime arch value
ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "Building on $BUILDPLATFORM, targeting $TARGETPLATFORM"

# TODO - check if can simplify below using  https://devblogs.microsoft.com/dotnet/improving-multiplatform-container-support/

RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    RID=linux-x64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    RID=linux-arm64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
    RID=linux-arm ; \
    fi \
    && dotnet publish --configuration $BUILDCONFIG --output /app/publish --runtime $RID /p:Version=$VERSION

# create the final image
FROM publish as final
WORKDIR /app
COPY --from=publish /app/publish ./

# configure and run
ENV ASPNETCORE_URLS=http://+:5000
EXPOSE 5000
ENTRYPOINT ["dotnet", "./SnsTestReceiver.Api.dll"]
